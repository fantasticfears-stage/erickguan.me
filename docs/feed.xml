<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <description>Internet and Technology.</description>
    <link>https://erickguan.me/</link>
    <atom:link href="https://erickguan.me/feed.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Digging in Python iterator and enumerate</title>
        <description>&lt;p&gt;When a PyTorch DataLoader repeat its data? Why it’s so magical and impossible to see in its code. It is implemented as an iterator in Python. Pythonic but implicit.&lt;/p&gt;

&lt;h1 id=&quot;use-case&quot;&gt;Use case&lt;/h1&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_batched&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i_batch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_batched&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;enumerate&lt;/code&gt; is not hard to understand which only &lt;a href=&quot;https://docs.python.org/3/library/functions.html#enumerate&quot;&gt;returns the sequence and iterator’s content.&lt;/a&gt;
So what iterator does is the key to the puzzle.&lt;/p&gt;

&lt;h1 id=&quot;iterator&quot;&gt;Iterator&lt;/h1&gt;

&lt;p&gt;Iterator defines at &lt;a href=&quot;https://docs.python.org/3/glossary.html#term-iterator&quot;&gt;document&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;An object representing a stream of data. Repeated calls to the iterator’s &lt;strong&gt;next&lt;/strong&gt;() method (or passing it to the built-in function next()) return successive items in the stream. When no more data are available a StopIteration exception is raised instead. At this point, the iterator object is exhausted and any further calls to its &lt;strong&gt;next&lt;/strong&gt;() method just raise StopIteration again. Iterators are required to have an &lt;strong&gt;iter&lt;/strong&gt;() method that returns the iterator object itself so every iterator is also iterable and may be used in most places where other iterables are accepted. One notable exception is code which attempts multiple iteration passes. A container object (such as a list) produces a fresh new iterator each time you pass it to the iter() function or use it in a for loop. Attempting this with an iterator will just return the same exhausted iterator object used in the previous iteration pass, making it appear like an empty container.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This says a lot. When you use &lt;code class=&quot;highlighter-rouge&quot;&gt;next(data_loader)&lt;/code&gt;, it gives you a new item.
And &lt;code class=&quot;highlighter-rouge&quot;&gt;StopIteration&lt;/code&gt; will be raised when it’s exausted. Exception some other magick. When it’s used with &lt;code class=&quot;highlighter-rouge&quot;&gt;iter()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; loop, a container object is built and as a fresh new iterator.&lt;/p&gt;

&lt;p&gt;This is complicated. How it allocates? Who manages the resources? What about processes? GIL?&lt;/p&gt;

&lt;p&gt;And more puzzles come. The document points to &lt;a href=&quot;https://docs.python.org/3/library/stdtypes.html#typeiter&quot;&gt;itertor types&lt;/a&gt;. It doesn’t explain the puzzles but introduced a new concept. A container can be used as a iterator if it supports &lt;code class=&quot;highlighter-rouge&quot;&gt;__iter__()&lt;/code&gt;. Plus &lt;code class=&quot;highlighter-rouge&quot;&gt;__next__()&lt;/code&gt;, it’ll form the iterator protocol.&lt;/p&gt;

&lt;p&gt;But okay, it doesn’t explain anything. From my experience from Ruby (MRI),
the implementation of Python should be similar to Ruby. Let’s digging in  CPython.&lt;/p&gt;

&lt;h1 id=&quot;cpythons-iterator-support&quot;&gt;CPython’s iterator support&lt;/h1&gt;

&lt;p&gt;CPython supports &lt;code class=&quot;highlighter-rouge&quot;&gt;tp_iter&lt;/code&gt; as API. That’s a good start. If you need to support an API, you have to implement it. The search comes to &lt;a href=&quot;https://docs.python.org/3/c-api/typeobj.html&quot;&gt;Type Objects&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CPython seems to have a regular type object for every type. That’s really good to find stuff. Maybe it’s also scary to have that long type definition if you have to define new custom object. Loot at Asian’s work, Ruby (MRI) has a surprisingly &lt;a href=&quot;https://silverhammermba.github.io/emberb/c/#data&quot;&gt;clean interface&lt;/a&gt; since it’s managed in the object inheritance. We are too responsible to do other’s work.
Though, the document doesn’t explain how &lt;code class=&quot;highlighter-rouge&quot;&gt;tp_iter&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tp_iternext&lt;/code&gt; were expected to use.&lt;/p&gt;

&lt;p&gt;They are two places defined them. One is included in &lt;code class=&quot;highlighter-rouge&quot;&gt;typeobject.h&lt;/code&gt; and the other one is &lt;code class=&quot;highlighter-rouge&quot;&gt;object.h&lt;/code&gt;. Everything is objects in Python so this is more relevant for now.&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_typeobject&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;cm&quot;&gt;/* Iterators */&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;getiterfunc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tp_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iternextfunc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tp_iternext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyTypeObject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But it doesn’t explain how different type implements it. List is common sense for Python programmer so let’s look at &lt;code class=&quot;highlighter-rouge&quot;&gt;listobject.c&lt;/code&gt;. CPython uses reference counting GC. So heap
space is used for object allocation. The other pairs of functions are reference counting.&lt;/p&gt;

&lt;h2 id=&quot;list-iterator-object&quot;&gt;List iterator object&lt;/h2&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyObject_HEAD&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_ssize_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyListObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/* Set to NULL when iterator is exhausted */&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;listiterobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;list_iter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;listiterobject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyList_Check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;PyErr_BadInternalCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject_GC_New&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listiterobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyListIter_Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_INCREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_seq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyListObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_PyObject_GC_TRACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This finally explains how container objects get its allocator. A new struct and new object are used to get iterator in Python. Then we can come to iterator object.&lt;/p&gt;

&lt;h2 id=&quot;iterator-object&quot;&gt;Iterator object&lt;/h2&gt;

&lt;p&gt;Funny thing is that you can’t construct an iterator in Python (&lt;code class=&quot;highlighter-rouge&quot;&gt;iterator()&lt;/code&gt;). According to another document says:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;An iterable object is an object that implements &lt;strong&gt;iter&lt;/strong&gt;, which is expected to return an iterator object.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Yet in the source code, you find similarity.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyObject_HEAD&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_ssize_t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exhausted&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*/&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seqiterobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;PySeqIter_New&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;seqiterobject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PySequence_Check&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;PyErr_BadInternalCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject_GC_New&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seqiterobject&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PySeqIter_Type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;Py_INCREF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_seq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_PyObject_GC_TRACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;iter_iternext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PyObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PySequence_GetItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;it_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It’s not much different except here it expects an iterabable object. It also
builds the iterator object. So the last thing would be where &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; allocates
iterator.&lt;/p&gt;

&lt;h2 id=&quot;how-for-allocates-the-iterator&quot;&gt;How &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; allocates the iterator?&lt;/h2&gt;

&lt;p&gt;Let’s go back to the example &lt;code class=&quot;highlighter-rouge&quot;&gt;for i_batch, sample_batched in enumerate(data_loader):&lt;/code&gt;.
When &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; statements get evaluated, the testlist which is &lt;code class=&quot;highlighter-rouge&quot;&gt;data_loader&lt;/code&gt; object if not consider &lt;code class=&quot;highlighter-rouge&quot;&gt;enumerate&lt;/code&gt; will be evaluated. It’s evaluated by executing &lt;code class=&quot;highlighter-rouge&quot;&gt;__iter__()&lt;/code&gt;
and &lt;code class=&quot;highlighter-rouge&quot;&gt;__next__()&lt;/code&gt;. And a implicit generator will get allocated!&lt;/p&gt;

&lt;p&gt;Until now, we know how CPython allocates the iterator as well as who manages the resource.&lt;/p&gt;

&lt;h1 id=&quot;process-management-and-gil&quot;&gt;Process management and GIL?&lt;/h1&gt;

&lt;p&gt;It’s actually invalid questions for now. If CPython manages the resource, it’s
always going to be local and constrained by GIL.&lt;/p&gt;
</description>
        <pubDate>Sun, 04 Nov 2018 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2018/python-iterator</link>
        <guid isPermaLink="true">https://erickguan.me/2018/python-iterator</guid>
      </item>
    
      <item>
        <title>K-Nearest Neighbor Classification in Scikit Learn</title>
        <description>&lt;p&gt;K-Nearest Neighbor (k-NN) presents a a simple straightforward instance-based
learning. Often, a simple strategy produces a good result as well as acting as
baseline performance.&lt;/p&gt;

&lt;p&gt;This article doesn’t deliver new knowledge but an interpretation and bridge to
others’ work. The reader need to understand the very basic of Machine Learning.
Especially, code is done with &lt;code class=&quot;highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In particular, KNN can be used in classification. The training data is vector
in a multidimensional space with a class label. &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; is an user-defined constant.
A test sample is classified based on a distance metric with &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; nearest samples from
the training data. That distance metric can be Euclidean distance for continuous
variables. As of discrete data, Hamming distance is a good choice.&lt;/p&gt;

&lt;p&gt;In Scholarpedia, it was visualized with Voronoi tessellation:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The k-nearest-neighbor classifier is commonly based on the Euclidean distance between a test sample and the specified training samples. Let &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_i&lt;/script&gt; be an input sample with &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; features &lt;script type=&quot;math/tex&quot;&gt;(\mathbf{x}_{i1},\mathbf{x}_{i2},\ldots,\mathbf{x}_{ip})&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; be the total number of input samples &lt;script type=&quot;math/tex&quot;&gt;(i=1,2,\ldots,n)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;p&lt;/script&gt; the total number of features &lt;script type=&quot;math/tex&quot;&gt;(j=1,2,\ldots,p)&lt;/script&gt;. The Euclidean distance between sample &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_i&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_l (l=1,2,\ldots,n)&lt;/script&gt; is defined as&lt;/p&gt;

  &lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;d(\mathbf{x}_i,\mathbf{x}_l)=\sqrt{(x_{i1}−x_{l1})^2+(x_{i2}−x_{l2})^2+\cdots+(x_{ip}−x_{lp})^2}&lt;/script&gt;.&lt;/p&gt;

  &lt;p&gt;&lt;img src=&quot;/assets/images/2017/knn-voronoi.png&quot; alt=&quot;Voronoi tessellation showing Voronoi cells of 19 samples marked with a &amp;quot;+&amp;quot;. The Voronoi tessellation reflects two characteristics of the example 2-dimensional coordinate system: i) all possible points within a sample's Voronoi cell are the nearest neighboring points for that sample, and ii) for any sample, the nearest sample is determined by the closest Voronoi cell edge.&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;A graphic depiction of the nearest neighbor concept is illustrated in the Voronoi tessellation (Voronoi, 1907) shown in Figure. The tessellation shows 19 samples marked with a “+”, and the Voronoi cell, R , surrounding each sample. A Voronoi cell encapsulates all neighboring points that are nearest to each sample and is defined as&lt;/p&gt;

  &lt;p&gt;&lt;script type=&quot;math/tex&quot;&gt;R_i=\{\mathbf{x}\in\mathbb{R}^p:d(\mathbf{x},\mathbf{x}_i) \leq d(x,x_m),\forall i \neq m\}&lt;/script&gt;,&lt;/p&gt;

  &lt;p&gt;where &lt;script type=&quot;math/tex&quot;&gt;R_i&lt;/script&gt; is the Voronoi cell for sample &lt;script type=&quot;math/tex&quot;&gt;\mathbf{x}_i&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt; represents all possible points within Voronoi cell &lt;script type=&quot;math/tex&quot;&gt;R_i&lt;/script&gt;. Voronoi tessellations primarily reflect two characteristics of a coordinate system: i) all possible points within a sample’s Voronoi cell are the nearest neighboring points for that sample, and ii) for any sample, the nearest sample is determined by the closest Voronoi cell edge. Using the latter characteristic, the k-nearest-neighbor classification rule is to assign to a test sample the majority category label of its k nearest training samples. In practice, k is usually chosen to be odd, so as to avoid ties. The k = 1 rule is generally called the nearest-neighbor classification rule.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This is a great description of understanding. However I found out it’s misleading
as visualization emphasizes too much on Voronoi instead of KNN itself.&lt;/p&gt;

&lt;h2 id=&quot;how-it-works&quot;&gt;How it works&lt;/h2&gt;

&lt;p&gt;It all comes out with the code. As in &lt;code class=&quot;highlighter-rouge&quot;&gt;scikit-learn&lt;/code&gt;, the &lt;code class=&quot;highlighter-rouge&quot;&gt;neighbors.KNeighborsClassifier(n_neighbors, algorithm='brute')&lt;/code&gt; implements the most simple way to use KNN. The class comprises of 4 mixins:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SupervisedIntegerMixin&lt;/code&gt;: a helper checks parameters and invoke real function.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ClassifierMixin&lt;/code&gt;: also a helper&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NeighborsBase&lt;/code&gt;: this mixin choose the optimal algorithm for efficient computing&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KNeighborsMixin&lt;/code&gt;: brute method is implemented here.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We only have to see how the brute with euclidean distance works to understand it.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;X&lt;/code&gt; is the input here. &lt;code class=&quot;highlighter-rouge&quot;&gt;self._fit_X&lt;/code&gt; is training data.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;n_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shape&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sample_range&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arange&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_samples&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[:,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pairwise_distances&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_fit_X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'euclidean'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# here X is compared with all training samples.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# dist is like a matrix of distance from X to training samples.&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Example: `array([[1, 3, 2, 4]])`, 1 sample with 4 training data.&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argpartition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n_neighbors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# sort until `n_neighbors - 1`. When return, on the left side&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# it should be smaller than this data point&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n_neighbors&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# argpartition doesn't guarantee sorted order, so we sort again&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argsort&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;neigh_ind&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Staring from &lt;code class=&quot;highlighter-rouge&quot;&gt;neigh_ind&lt;/code&gt; are some lines only used to sort result.
At last, a distance result and the order of distance to training
data is returned.&lt;/p&gt;

&lt;p&gt;If you ever tried &lt;a href=&quot;http://scikit-learn.org/stable/modules/neighbors.html#nearest-neighbors-classification&quot;&gt;the sample code&lt;/a&gt;, you would notice the
choice of &lt;code class=&quot;highlighter-rouge&quot;&gt;k&lt;/code&gt; affects the result a lot upon iris dataset.&lt;/p&gt;

&lt;p&gt;Plus, the weight metric and &lt;code class=&quot;highlighter-rouge&quot;&gt;RadiusNeighborsClassifier&lt;/code&gt; is a
further enhancement.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;KNN is a really simple nearest neighbor classification or
regression tool. It’s nothing fancy but with weight and algorithm
you can tweak.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Nov 2017 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2017/k-nearest-neighbour-in-scikit-learn</link>
        <guid isPermaLink="true">https://erickguan.me/2017/k-nearest-neighbour-in-scikit-learn</guid>
      </item>
    
      <item>
        <title>The Surprising Number in JavaScript</title>
        <description>&lt;p&gt;Did you know you can not have a number larger than &lt;script type=&quot;math/tex&quot;&gt;2^{53}-1&lt;/script&gt; in JavaScript?&lt;/p&gt;

&lt;p&gt;You might try this in Chrome Developer Console and want to tell me that it works in Chrome.&lt;/p&gt;

&lt;p&gt;It works because you are lucky.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-number&quot;&gt;What is a Number?&lt;/h2&gt;

&lt;p&gt;Let’s take a step back and review what is a number. Is &lt;script type=&quot;math/tex&quot;&gt;2^{53}&lt;/script&gt; a number in JavaScript?&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;It works out right. But can there be potential issues?&lt;/p&gt;

&lt;p&gt;Yes, it’s not &lt;em&gt;safe&lt;/em&gt;.
It’s not safe because the number you hold
may lose its precision if it’s larger than the magical &lt;script type=&quot;math/tex&quot;&gt;2^{53}&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Your user may complain they lose their money when they type a large number.
&lt;code class=&quot;highlighter-rouge&quot;&gt;9007199254740992&lt;/code&gt;. You may lose your rocket in the sky because its position goes wrong.&lt;/p&gt;

&lt;p&gt;That’s why you don’t trust the input and the reason you remember to check.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;isSafeInteger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Chrome can represent a integer more than ECMAScript required. That is unique for Chrome
. You are not allowed to rely on such undefined behavior by its implementation V8 engine.
It’s not portable and error prone.&lt;/p&gt;

&lt;p&gt;If you read the great MDN, you’ll find:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;According to the ECMAScript standard, there is only one number type: the double-precision 64-bit binary format IEEE 754 value (number between &lt;script type=&quot;math/tex&quot;&gt;-(2^{53}-1)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;2^{53}-1&lt;/script&gt;). There is no specific type for integers. In addition to being able to represent floating-point numbers, the number type has three symbolic values: +Infinity, -Infinity, and NaN (not-a-number).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;You are not using Python, C/C++ or Ruby but JavaScript. There isn’t a type for integer in JavaScript.
Your integer at your hand
is just a &lt;code class=&quot;highlighter-rouge&quot;&gt;Number&lt;/code&gt; in JavaScript. JavaScript is weak in its type system opposing to other
dynamic languages in which allow you to represent the infinite large number.&lt;/p&gt;

&lt;p&gt;The ECMAScript standard says the number representation limits to the IEEE 754 value.
The standard defined that there isn’t a integer type so it’s a tangible mistake to do it.&lt;/p&gt;

&lt;p&gt;If you use Python and Ruby, you pay the price when you use large number which probably you rarely make use of. So does the copy on right (CoW) in string to C++. But you are benefit to know
such information. It indicates you optimize for the right direction.
You don’t optimize for the extreme large number if you don’t encounter it frequently.
You optimize string view rather than CoW in C++17.
But in JavaScript, Python and Ruby. You enjoyed the fact that they have a type (class or object).&lt;/p&gt;

&lt;p&gt;Such OO concept helps you encapsulate logic or anything.&lt;/p&gt;

&lt;p&gt;In JavaScript, you also have bizarre pieces like &lt;code class=&quot;highlighter-rouge&quot;&gt;+Infinity&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;-Infinity&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;NaN&lt;/code&gt; and our famous equality table along with the &lt;code class=&quot;highlighter-rouge&quot;&gt;Number&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2017/js-equality-table.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;grown-designed&quot;&gt;Grown? Designed?&lt;/h3&gt;

&lt;p&gt;Why is that?&lt;/p&gt;

&lt;p&gt;JavaScript starts as a prototype project and designed by one person in 1995.&lt;/p&gt;

&lt;p&gt;It was the browser war time. So there is 
Netscape (former Mozilla), Microsoft and hackers (KHTML &amp;amp; WebKit). In particular, Brendan Eich was recruited by Netscape and
assigned the task to design the language with the goal of embedding Scheme.
Netscape believed it would be important. And here came the other major vendors.
With the collaboration with Sun, the language in development should looks like Java to compete with Microsoft.&lt;/p&gt;

&lt;p&gt;Such an important job is not held by a group of professors as you might imagine.
The designer at the time was only Brendan Eich. He invented the
prototype in 10 days, in May 1995.&lt;/p&gt;

&lt;h4 id=&quot;a-story-from-make&quot;&gt;A story from make&lt;/h4&gt;

&lt;p&gt;Let’s have some perspective. It’s 1995. Web is little to be known. People talk about Java, C++, Unix, internet, HTML etc.&lt;/p&gt;

&lt;p&gt;It was different.&lt;/p&gt;

&lt;p&gt;You have an
internet community and your lovely package manager like npm and bundler nowadays.
Everything are done for you and you believed there is somebody who will take care
something. You can talk about projects and think about the faults that your fellow
made so that you can fix in your new project.&lt;/p&gt;

&lt;p&gt;Non of that happens for Brendan Eich.&lt;/p&gt;

&lt;p&gt;I’m about to get the point but let’s talk about &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt; instead.
Do you know what we still suffer in making a C/C++ project? The answer is that we
still use Makefile. &lt;code class=&quot;highlighter-rouge&quot;&gt;make&lt;/code&gt; was a program in Unix to define how the dependency of
objects file should be resolved.
It was written by one person and intended
to be shared with friends.
The inventor went on ahead and starts command with tab without think too much.
The tab in a makefile is treat differently rather than spaces.
It’s a fine choice at the time and they came up the idea to include it into the standard UNIX package. Would that be wonderful, right?&lt;/p&gt;

&lt;p&gt;So wrong. We suffer because of those ten guys.&lt;/p&gt;

&lt;p&gt;The code aged but you can not revert time. The code is the logic that you don’t want to redo. It becomes dominant then you couldn’t change it without breaking things.
C++ pays the price for compatibility. Python pays the price too. They pay it differently.&lt;/p&gt;

&lt;p&gt;People can’t love what they don’t know. People want to be part of something.&lt;/p&gt;

&lt;p&gt;From JavaScript 1.0 to ECMAScript 2017, the JavaScript could not be redesigned
because it was put on the market for way too long.
It’s grown to this position. It was designed but it can not be designed now to gain
the same dominance.&lt;/p&gt;

&lt;h4 id=&quot;javascript&quot;&gt;JavaScript&lt;/h4&gt;

&lt;p&gt;Douglas Crockford, the creator of JSON said,&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;JavaScript is built on some very good ideas and a few very bad ones.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A committee of experts in programming language may still deliver obscure syntax
for a programming language.
Could you blame JavaScript for a 10-day one man project?&lt;/p&gt;

&lt;p&gt;But why we suffer from this? Can we reboot it like Python 3? Probably no.
We just don’t have a choice. It’s bundled with the browser and DOM.
We live in an aftermath with survival like Chrome, Firefox and Safari.
Chrome shows the power of programming in user browser and we can never go back.
Node.js is on the market for years.&lt;/p&gt;

&lt;p&gt;JavaScript has grown. It evolves through years.&lt;/p&gt;

&lt;h2 id=&quot;its-terrible-the-take-away&quot;&gt;It’s terrible? The take away&lt;/h2&gt;

&lt;p&gt;Lie on your back. LOOK at how it’s successful as a language. It’s universal now.&lt;/p&gt;

&lt;p&gt;We all know there is no perfect language. JavaScript is no different.
JavaScript can be really surprised
in types. But don’t you happy with the first-class functions? Closures? Object literals? And performance?&lt;/p&gt;

&lt;p&gt;So as a programmer, why not setup your linter if you have committed the very same
mistakes many times.
Just do more coding.&lt;/p&gt;

&lt;p&gt;And don’t design without thinking. Do think twice when you design. Someone may suffer. You may suffer.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Thanks my friend @lextm for reviewing the draft.&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 23 Aug 2017 00:00:00 +0200</pubDate>
        <link>https://erickguan.me/2017/the-surprise-number-in-javascript</link>
        <guid isPermaLink="true">https://erickguan.me/2017/the-surprise-number-in-javascript</guid>
      </item>
    
      <item>
        <title>Copy and Paste Bookmarklet</title>
        <description>&lt;p&gt;Inspired by &lt;a href=&quot;https://github.com/jswanner/DontFuckWithPaste&quot;&gt;DontFuckWithPaste&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But why you ever need an extension taking your 100MB memory when you can have a nice and neat bookmarklet?&lt;/p&gt;

&lt;p&gt;&lt;a style=&quot;padding: 10px; border: 1px dashed #777; background-image: none;&quot; href=&quot;javascript:(function()%7Bconst%20allowCopyAndPaste%20%3D%20(e)%3D%3E%20%7Be.stopImmediatePropagation()%3Breturn%20true%3B%7D%3B%5B'copy'%2C'paste'%5D.forEach(a%20%3D%3E%20%7Bdocument.addEventListener(a%2C%20allowCopyAndPaste%2C%20true)%3B%7D)%7D)()&quot;&gt;&amp;gt; Copy &amp;amp; Paste&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Drag the bookmarklet above into your bookmark bar. If you disable the bookmark bar, right click besides the link bar to get it back.&lt;/li&gt;
  &lt;li&gt;Click when you need copy and paste.&lt;/li&gt;
  &lt;li&gt;It’s a fake step. You are done.&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Thu, 27 Jul 2017 00:00:00 +0200</pubDate>
        <link>https://erickguan.me/2017/copy-and-paste-bookmarklet</link>
        <guid isPermaLink="true">https://erickguan.me/2017/copy-and-paste-bookmarklet</guid>
      </item>
    
      <item>
        <title>Bridging ICU with Ruby</title>
        <description>&lt;p&gt;Chinese Discourse users have more complains to the text problems. A community
software induce users to read and write which certainly deals with texts.
Numerous efforts are made along the way such as tokenizers for Chinese. Maintaining
a project is not easy.
One of feature request for Discourse is Unicode username. A core technical problem
is visually confusing username. Discourse community may be in a multilingual
community. This is certainly important to deal with. Although username is the
core identify of the user representation. It’s more than Unicode.&lt;/p&gt;

&lt;h2 id=&quot;motivation-and-goals&quot;&gt;Motivation and goals&lt;/h2&gt;

&lt;p&gt;Somehow, Ruby community doesn’t have much tools for Unicode processing. Unicode
normalization is implemented in the core library in 2.2. And what about &lt;a href=&quot;http://unicode.org/reports/tr36/&quot;&gt;Unicode
security problems&lt;/a&gt;? I don’t want to reinvent the
wheel.
&lt;a href=&quot;http://site.icu-project.org/&quot;&gt;ICU (International Components for Unicode)&lt;/a&gt; is an old and battle-tested
library for the Unicode. A binding with it would worth it. It should have
high performance, easy to maintain and can be deployed with MRI.&lt;/p&gt;

&lt;p&gt;There are already some gems.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/twitter/twitter-cldr-rb&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;twitter-cldr-rb&lt;/code&gt; gem&lt;/a&gt; is a pure
Ruby implementation based on &lt;a href=&quot;http://cldr.unicode.org/&quot;&gt;Unicode CLDR&lt;/a&gt;. Adding
feature means implementing algorithm on the unicode document.&lt;/li&gt;
  &lt;li&gt;Some existing gems are obsolete.&lt;/li&gt;
  &lt;li&gt;The binding with ICU is &lt;a href=&quot;https://bugs.ruby-lang.org/issues/2034&quot;&gt;discussed in MRI tracker&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;do-it-right&quot;&gt;Do it right&lt;/h2&gt;

&lt;p&gt;Ruby is really different than other programing languages in terms of its string
implementation. &lt;a href=&quot;http://yokolet.blogspot.se/2009/07/design-and-implementation-of-ruby-m17n.html&quot;&gt;The &lt;em&gt;Code Set Independent&lt;/em&gt; (CSI) model&lt;/a&gt;
doesn’t set a common internal encoding but stores the bytes presentation
with encoding information. It allows Ruby convert encodings when it involves I/O operations.
Also, Ruby holds the external encoding &lt;code class=&quot;highlighter-rouge&quot;&gt;Encoding.default_external&lt;/code&gt; which is how Ruby
reads from an IO object. The &lt;code class=&quot;highlighter-rouge&quot;&gt;IO&lt;/code&gt; object is typically a file (&lt;code class=&quot;highlighter-rouge&quot;&gt;File&lt;/code&gt; is a subclass of IO).
The &lt;code class=&quot;highlighter-rouge&quot;&gt;Encoding.default_internal&lt;/code&gt; for new created string is usually UTF-8 from the environment.
&lt;a href=&quot;http://nuclearsquid.com/writings/ruby-1-9-encodings/&quot;&gt;This starts from Ruby 1.9&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;ICU provides &lt;a href=&quot;http://userguide.icu-project.org/i18n&quot;&gt;many internationalization features&lt;/a&gt;. It operates with strings.
So the most operations happen in memory. But ICU &lt;a href=&quot;http://userguide.icu-project.org/strings&quot;&gt;uses UTF-16 internally&lt;/a&gt;. The conversion will happen if
UTF-8 is used as the default encoding.&lt;/p&gt;

&lt;p&gt;Also, ICU’s C API uses callback function for error reporting.&lt;/p&gt;

&lt;p&gt;A gem with C code can easily access byte arrays. And the conversion in C will be faster
than MRI implementation.&lt;/p&gt;

&lt;h2 id=&quot;design&quot;&gt;Design&lt;/h2&gt;

&lt;p&gt;ICU binding should be as transparent as possible. The user only uses the equivalent Ruby
API of ICU. Its module holds a optional internal encoding for the
returning result (usually a string). Since ruby’s string can be any encodings, it have
to be converted to UTF-16 for feeding ICU.&lt;/p&gt;

&lt;p&gt;Along the way, &lt;a href=&quot;https://silverhammermba.github.io/emberb/examples/&quot;&gt;&lt;em&gt;The Definitive Guide to Ruby’s C API&lt;/em&gt;&lt;/a&gt; helps me quite a lot. It’s the most clear reference for Ruby’s C API I’ve seen.&lt;/p&gt;

</description>
        <pubDate>Tue, 14 Mar 2017 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2017/bridging-icu-with-ruby</link>
        <guid isPermaLink="true">https://erickguan.me/2017/bridging-icu-with-ruby</guid>
      </item>
    
      <item>
        <title>Hooray, Webhooks</title>
        <description>&lt;p&gt;Webhooks are “user-defined HTTP callbacks” &lt;a href=&quot;http://progrium.com/blog/2007/05/03/web-hooks-to-revolutionize-the-web/&quot;&gt;brought by Jeff Lindsay&lt;/a&gt;. While it’s &lt;a href=&quot;http://timothyfitz.com/2009/02/09/what-webhooks-are-and-why-you-should-care/&quot;&gt;augmented&lt;/a&gt; for some time, it comes to my sight because of continuous integration like Travis CI at GitHub. Later, Slack made it fancy as every services could pop up messages in the channel as if I was in Enterprise bridge:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/old/USS_Enterprise_(alternate_reality)_bridge.jpg&quot; alt=&quot;Enterprise bridge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s also interesting to discover how it can be implemented on Ruby on Rails.&lt;/p&gt;

&lt;h2 id=&quot;case-study-webhooks-at-github-and-slack&quot;&gt;Case Study: Webhooks at GitHub and Slack&lt;/h2&gt;

&lt;p&gt;Since GitHub and Slack build great webhooks, it’s a good practice to see how they build the service.&lt;/p&gt;

&lt;h3 id=&quot;github&quot;&gt;GitHub&lt;/h3&gt;

&lt;p&gt;GitHub runs central repositories for git and origination services. It offers &lt;a href=&quot;https://developer.github.com/webhooks/&quot;&gt;webhooks&lt;/a&gt; on organization level and repositories level where user can manage webhooks in the admin panel. GitHub allow users to create “up to 20 webhooks for each event on each installation target”. has an &lt;a href=&quot;https://github.com/integrations&quot;&gt;Integrations Directory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Events are triggered on certain scenario: (highlight)&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;*&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any time any event is triggered. &lt;a href=&quot;#wildcard-event&quot;&gt;Wildcard Event&lt;/a&gt; overwrites other events.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;commit_comment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any time a Commit is commented on.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;push&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Any Git push to a Repository. &lt;strong&gt;default event.&lt;/strong&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Illustrated in adding webhook page on the admin panel:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/github-add-webhooks.png&quot; alt=&quot;Adding webhooks at GitHub&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With pre-set configuration, GitHub is responsible for sending payload (JSON) based on &lt;a href=&quot;https://developer.github.com/v3/activity/events/types/&quot;&gt;event type&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;However, the payload size will be small than 5MB, otherwise, it will be discarded. It’s user’s responsibility to monitor payload size.&lt;/p&gt;

&lt;p&gt;A HTTP header of webhooks includes event name, unique ID and signature by HMAC hex digest of the payload which uses hook’s secret as a key if secret is set.&lt;/p&gt;

&lt;p&gt;GitHub build a great API. Webhook can be managed by its API. For testing reason, GitHub provides a &lt;a href=&quot;https://developer.github.com/webhooks/#ping-event&quot;&gt;Ping event to test a hook&lt;/a&gt;, &lt;a href=&quot;https://developer.github.com/v3/repos/hooks/#test-a-push-hook&quot;&gt;hook’s test endpoint&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Service hooks are defined sets of webhooks by the &lt;a href=&quot;https://github.com/github/github-services&quot;&gt;third party at github-services repo&lt;/a&gt;. However, GitHub no longer accepts new service instead of urging new integration service to build OAuth application help managing webhooks. Be noted, GitHub integrations directory is different than services. It’s just a directory to help redirecting to third party services who manage webhooks.&lt;/p&gt;

&lt;h4 id=&quot;pubsubhubbub&quot;&gt;PubSubHubbub&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pubsubhubbub/PubSubHubbub&quot;&gt;This crazy name (PubSubHubbub)&lt;/a&gt; belongs to an open protocol for distributed publish/subscribe communication on the Internet. Their &lt;a href=&quot;http://pubsubhubbub.github.io/PubSubHubbub/pubsubhubbub-core-0.4.html&quot;&gt;specification&lt;/a&gt; defines a decoupled flow for webhooks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://wordpress.org/plugins/pubsubhubbub/&quot;&gt;A Wordpress plugin&lt;/a&gt; helps you announce new blog post. And GitHub can &lt;a href=&quot;https://developer.github.com/v3/repos/hooks/#pubsubhubbub&quot;&gt;serve as a PubSubHubbub hub&lt;/a&gt; for all repositories.&lt;/p&gt;

&lt;p&gt;It’s designed to &lt;a href=&quot;https://github.com/pubsubhubbub/PubSubHubbub/wiki/Why-Polling-Sucks&quot;&gt;overcome polling for getting feed updates&lt;/a&gt;. GitHub will create a webhook if you request the hub.&lt;/p&gt;

&lt;h3 id=&quot;slack&quot;&gt;Slack&lt;/h3&gt;

&lt;p&gt;Slack builds the fancy messaging app for teams. Many integrations and bots are just favorable.&lt;/p&gt;

&lt;p&gt;Basically, Slack offers incoming and outgoing webhooks. Slash commands is built on these two webhooks.&lt;/p&gt;

&lt;p&gt;In terms of &lt;a href=&quot;https://api.slack.com/incoming-webhooks&quot;&gt;incoming webhooks&lt;/a&gt;, sending a JSON payload and plain text to a hashed url would trigger a message with defined name and icon. Simple as that.
&lt;a href=&quot;https://api.slack.com/outgoing-webhooks&quot;&gt;Outgoing webhooks&lt;/a&gt; come with receiving payload of messages. A payload will be sent when triggered by keywords or a new message on the channel. The integrated services can reply back if they want.&lt;/p&gt;

&lt;p&gt;As an extension of outgoing webhooks, slash commands send payload to server and reply messages back to the channel. However, bots are separated from other webhooks. They build upon &lt;a href=&quot;https://api.slack.com/web&quot;&gt;Slack API&lt;/a&gt; and &lt;a href=&quot;https://api.slack.com/rtm&quot;&gt;realtime API&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;considerations&quot;&gt;Considerations&lt;/h2&gt;

&lt;p&gt;Webhooks are highly application-specific. Event payloads would be transported in secure (HTTPS) or plaintext (Don’t care) manner according to the content. Therefore, signature (symmetric key) or a token can be used as a way to authentication. For ambitious applications, they offers a way to package webhooks as a service to minimize the deployment cost of webhooks.&lt;/p&gt;

</description>
        <pubDate>Mon, 14 Mar 2016 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2016/hooray-webhooks</link>
        <guid isPermaLink="true">https://erickguan.me/2016/hooray-webhooks</guid>
      </item>
    
      <item>
        <title>Ensuring the file uploaded by Refile</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/refile/refile&quot;&gt;Refile&lt;/a&gt; is an neat and simple file upload library for Ruby applications. It can be easily to integrated into Rails app. Be advised, I am on its git version &lt;code class=&quot;highlighter-rouge&quot;&gt;6a25a24059&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Recently, I ran into trouble to validate the file exists or uploaded. I went through the AR layer, the model is &lt;a href=&quot;https://github.com/refile/refile/blob/6a25a24059/lib/refile/attachment/active_record.rb#L24-L26&quot;&gt;set at &lt;code class=&quot;highlighter-rouge&quot;&gt;before_save&lt;/code&gt; hook&lt;/a&gt;. There is no way to check the file is uploaded.&lt;/p&gt;

&lt;p&gt;Thanks to its simple abstraction, &lt;code class=&quot;highlighter-rouge&quot;&gt;attacher&lt;/code&gt; will &lt;a href=&quot;https://github.com/refile/refile/blob/6a25a24059/lib/refile/attachment/active_record.rb#L12-L15&quot;&gt;present&lt;/a&gt; when the file is uploaded.&lt;/p&gt;

&lt;p&gt;Then the final resolution is straightforward. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class UserValidator &amp;lt; ActiveModel::Validator
  def validate(record)
    unless record.send(:avatar).present?
      attacher = &quot;avatar_attacher&quot;

      record.errors.add(:avatar, :blank, options) unless record.send(attacher).present?
	end
  end
end
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Only if the file is uploaded, the attcher will &lt;a href=&quot;https://github.com/refile/refile/blob/6a25a24059/lib/refile/attacher.rb#L150-L152&quot;&gt;be present&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 19 Mar 2015 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2015/ensure-the-file-uploaded-by-refile</link>
        <guid isPermaLink="true">https://erickguan.me/2015/ensure-the-file-uploaded-by-refile</guid>
      </item>
    
      <item>
        <title>Binding ACE editor with Rails form helper</title>
        <description>&lt;p&gt;ACE editor only can bind with a &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; container which means rails form helper can’t help when you want to bind with an attribute.
I am going to work through my solution.&lt;/p&gt;

&lt;h3 id=&quot;text_area&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text_area&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;text_area&lt;/code&gt; genererates &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; which people can edit its content without any js. And this helper helps you forget about binding with model.&lt;/p&gt;

&lt;p&gt;I will get the content from it for ACE. When the js can’t work, we can still get a functional editor.&lt;/p&gt;

&lt;h3 id=&quot;binding-with-ace&quot;&gt;Binding with ACE&lt;/h3&gt;

&lt;p&gt;HTML:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;div class=&quot;source-editor&quot; data-mode=&quot;markdown&quot;&amp;gt;
  &amp;lt;textarea&amp;gt;&amp;lt;/textarea&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Script is easy. Work though all the &lt;code class=&quot;highlighter-rouge&quot;&gt;source-editor&lt;/code&gt;, create a div and bind ACE within it. Then save back to textarea when submit.&lt;/p&gt;

&lt;p&gt;You should set css for &lt;code class=&quot;highlighter-rouge&quot;&gt;textarea&lt;/code&gt; just like the  &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; in the ACE tutorial.&lt;/p&gt;
&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.source-editor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'mode'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;container&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'textarea'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// build a edit div for ACE since ACE can't load in a textarea&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&amp;lt;div&amp;gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'absolute'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
      &lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'class'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// no need to display textarea&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'display'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'none'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;edit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setFontSize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'14px'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setTheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ace/theme/yesterday'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'ace/mode/'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// save back to the textarea when submit&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'form'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;editorArea&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;more-complicated-templates&quot;&gt;More complicated templates&lt;/h3&gt;

&lt;p&gt;Actually I forged Github-liked toolbar for the ACE editor which needs more HTML structures.&lt;/p&gt;

&lt;p&gt;This can be done by Rails view partials. Separated HTML and passing form helper as a parameter. Then write its control logic in the component js.
No need for customized helpers, simple is the best.&lt;/p&gt;

&lt;div class=&quot;language-haml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;partial: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'components/source_editor'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;locals: &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;                                   &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;preview_url: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                            &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;ace_mode: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'markdown'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                       &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;indent_width: &lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%w(2 4 8)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                    &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;tab_label: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Edit content'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                  &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;preview_label: &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Preview'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;                   &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;  &lt;span class=&quot;ss&quot;&gt;attribute: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;text_area&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:raw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;              &lt;span class=&quot;se&quot;&gt; |
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Tue, 23 Dec 2014 00:00:00 +0100</pubDate>
        <link>https://erickguan.me/2014/binding-ace-editor-with-rails-from-helper</link>
        <guid isPermaLink="true">https://erickguan.me/2014/binding-ace-editor-with-rails-from-helper</guid>
      </item>
    
      <item>
        <title>Bundle install without VPN in China</title>
        <description>&lt;p&gt;EDIT: Recommended mirror site updated in the end.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems&lt;/a&gt; got blocked by GFW which blocks everytime you do &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;. It’s because some of Amazon S3 are blocked by gov.&lt;/p&gt;

&lt;p&gt;In the mainland China, we can just use mirror provided by Taobao. It’s fast. It sync with RubyGems every fifteen minutes.&lt;/p&gt;

&lt;p&gt;The mirror &lt;a href=&quot;https://ruby.taobao.org&quot;&gt;ruby.taobao.org&lt;/a&gt; has a detail usage guide. Here I want to demonstrate how to use it as a mirror instead of gem source.&lt;/p&gt;

&lt;h2 id=&quot;mirror&quot;&gt;Mirror&lt;/h2&gt;

&lt;p&gt;Sometime you’ll find you can’t remove rubygems source or change &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;. What you can do is to simply add a mirror for bundler.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle config mirror.https://rubygems.org https://ruby.taobao.org&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can find Bundler mirror documentation &lt;a href=&quot;http://bundler.io/v1.7/bundle_config.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;updated-mirror&quot;&gt;Updated mirror&lt;/h2&gt;

&lt;p&gt;Taobao mirror has troubles becaus of security policies that only employees can access servers which is needed for maintenance work at Taobao. Core maintainers left Taobao recent years which cause all kinds of troubles.&lt;/p&gt;

&lt;p&gt;Therefore, a new mirror is considered to operate separately under control of serveral core members at &lt;a href=&quot;https://ruby-china.org/&quot;&gt;Ruby China&lt;/a&gt;. QCloud will sponsor servers and CDN from Tencent. It’s going to offer “realtime” synchronization, 400+ global CDNs and two servers operated outside China which ensures CDN server can query the data.&lt;/p&gt;

&lt;p&gt;Here is some related links (in Chinese of course):&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Issues: &lt;a href=&quot;https://ruby-china.org/topics/29250&quot;&gt;https://ruby-china.org/topics/29250&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Github: &lt;a href=&quot;https://github.com/ruby-china/rubygems-mirror&quot;&gt;https://github.com/ruby-china/rubygems-mirror&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Mirror site: &lt;a href=&quot;http://gems.ruby-china.org/&quot;&gt;http://gems.ruby-china.org/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;commands&quot;&gt;Commands&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;gem sources --add https://gems.ruby-china.org/ --remove https://rubygems.org/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle config mirror.https://rubygems.org https://gems.ruby-china.org&lt;/code&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 14 Sep 2014 00:00:00 +0200</pubDate>
        <link>https://erickguan.me/2014/bundle-install-without-vpn-in-china</link>
        <guid isPermaLink="true">https://erickguan.me/2014/bundle-install-without-vpn-in-china</guid>
      </item>
    
      <item>
        <title>Adding a system call to Linux 3.14</title>
        <description>&lt;p&gt;There are plenty of blog posts about adding a system call to Linux 2.6, but they are out of date now. Here is a article about adding a system call to Linux 3.14. I assume you can easily add the system call for further kernel. Shane wrote a &lt;a href=&quot;https://shanetully.com/2014/04/adding-a-syscall-to-linux-3-14/&quot;&gt;great post&lt;/a&gt; about it.&lt;/p&gt;

&lt;h2 id=&quot;system-call&quot;&gt;System call&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;System call&lt;/strong&gt; is how a user space application request a service from an operating system. Many libraries, even C standard library, are an wrapper with additional functions.&lt;/p&gt;

&lt;h2 id=&quot;environment&quot;&gt;Environment&lt;/h2&gt;

&lt;p&gt;Gentoo Linux(amd64): aufs-sources:3.14.5&lt;/p&gt;

&lt;p&gt;If you are not a Gentoo user, you can get the kernel source from your package manager and &lt;a href=&quot;http://kernel.org/&quot;&gt;The Linux Kernel&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;adding-a-system-call&quot;&gt;Adding a system call&lt;/h2&gt;

&lt;p&gt;A system call is defined in the system call entry table, a system call function prototype and actual implementation for the system call.&lt;/p&gt;

&lt;h3 id=&quot;syscall-table&quot;&gt;syscall table&lt;/h3&gt;

&lt;p&gt;The syscall table is located in the &lt;code class=&quot;highlighter-rouge&quot;&gt;arch/x86/syscalls/syscall_64.tbl&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;format&quot;&gt;Format&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;numver&amp;gt; &amp;lt;abi&amp;gt; &amp;lt;name&amp;gt; &amp;lt;entry point&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt;: All syscalls are identified by a unique number. In order to call a syscall, we tell the kernel to call the syscall by its number rather than by its name.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;abi&lt;/code&gt;: The ABI, or application binary interface, to use. Either 64, x32, or common for both.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt;: This is simply the name of the syscall.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;entry point&lt;/code&gt;: The entry point is the name of the function to call in order to handle the syscall. The naming convention for this function is the name of the syscall prefixed with &lt;code class=&quot;highlighter-rouge&quot;&gt;sys_&lt;/code&gt;. For example, the &lt;code class=&quot;highlighter-rouge&quot;&gt;read&lt;/code&gt; syscall’s entry point is &lt;code class=&quot;highlighter-rouge&quot;&gt;sys_read&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;how-to&quot;&gt;How-to&lt;/h4&gt;

&lt;p&gt;Skipping the table, you’ll find a series of x86 system calls starting with 512. I’ll add the system call in the end after table right above that part.&lt;/p&gt;

&lt;p&gt;For 3.14, the last system call is &lt;code class=&quot;highlighter-rouge&quot;&gt;315 common  sched_getattr       sys_sched_getattr&lt;/code&gt;. So I add the new one as 316. It look like this:
&lt;code class=&quot;highlighter-rouge&quot;&gt;316 common  set_root            sys_set_root&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;system-call-function-prototype&quot;&gt;System call function prototype&lt;/h3&gt;

&lt;p&gt;We need to define the function prototype in the &lt;code class=&quot;highlighter-rouge&quot;&gt;include/linux/syscalls.h&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Simply adding a line: &lt;code class=&quot;highlighter-rouge&quot;&gt;asmlinkage long sys_set_root(void);&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We’ll add a system call takes no argument.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;asmlinkage&lt;/code&gt; is a modifier. This macro tells the compiler that the function should not expect to find any of its arguments in registers (a common optimization), but only on the CPU’s stack. You can find more in &lt;a href=&quot;http://kernelnewbies.org/FAQ/asmlinkage&quot;&gt;FAQ&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;system-call-implementation&quot;&gt;System call implementation&lt;/h3&gt;

&lt;p&gt;Now, just create a new file &lt;code class=&quot;highlighter-rouge&quot;&gt;kernel/set_root.c&lt;/code&gt;. Kernel style guild requires 8 space tab for indentation. But I will insist 4 space here.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;linux/kernel.h&amp;gt;
#include &amp;lt;linux/init.h&amp;gt;
#include &amp;lt;linux/sched.h&amp;gt;
#include &amp;lt;linux/syscalls.h&amp;gt;

asmlinkage long sys_set_root(void)
{
    struct user_namespace *ns = current_user_ns();
    struct cred *new;

    kuid_t kuid = make_kuid(ns, 0);
    kgid_t kgid = make_kgid(ns, 0);

    if (!uid_valid(kuid)) {
        return -EINVAL;
    }

    new = prepare_creds();

    if (new != NULL) {
        new-&amp;gt;uid = kuid;
        new-&amp;gt;gid = kgid;

        new-&amp;gt;euid = kuid;
        new-&amp;gt;egid = kgid;

        new-&amp;gt;suid = kuid;
        new-&amp;gt;sgid = kgid;

        new--&amp;gt;fsuid = kuid;
        new-&amp;gt;fsgid = kgid;

        return commit_creds(new);
    } else {
        abort_creds(new);
        return -ENOMEM;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The code set the user program as root unconditionally. DO NOT USE THIS KERNEL after the experiment, or you’re in trouble.&lt;/p&gt;

&lt;h3 id=&quot;adding-our-implementation-to-makefile&quot;&gt;Adding our implementation to Makefile&lt;/h3&gt;

&lt;p&gt;Adding &lt;code class=&quot;highlighter-rouge&quot;&gt;set_root.o&lt;/code&gt; to the end of &lt;code class=&quot;highlighter-rouge&quot;&gt;obj-y&lt;/code&gt; line in the &lt;code class=&quot;highlighter-rouge&quot;&gt;kernel/Makefile&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;patch-about-the-kernel&quot;&gt;Patch about the kernel&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gh&quot;&gt;diff --git a/arch/x86/syscalls/syscall_64.tbl b/arch/x86/syscalls/syscall_64.tbl
index a12bddc..413209b 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/arch/x86/syscalls/syscall_64.tbl
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/arch/x86/syscalls/syscall_64.tbl
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -322,6 +322,7 @@
&lt;/span&gt;313    common  finit_module            sys_finit_module
314    common  sched_setattr           sys_sched_setattr
315    common  sched_getattr           sys_sched_getattr
&lt;span class=&quot;gi&quot;&gt;+316 common  set_root            sys_set_root
&lt;/span&gt;
#
# x32-specific system call numbers    start at 512 to avoid cache impact
&lt;span class=&quot;gh&quot;&gt;diff --git a/include/linux/syscalls.h b/include/linux/syscalls.h
index a747a77..c9f7c3c 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/include/linux/syscalls.h
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/include/linux/syscalls.h
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -855,4 +855,6 @@ asmlinkage long sys_process_vm_writev(pid_t pid,
&lt;/span&gt;asmlinkage long sys_kcmp(pid_t pid1, pid_t pid2, int type,
                        unsigned long idx1, unsigned long idx2);
asmlinkage long sys_finit_module(int fd, const char __user *uargs, int flags);
&lt;span class=&quot;gi&quot;&gt;+asmlinkage long sys_set_root(void);
+
&lt;/span&gt;#endif
&lt;span class=&quot;gh&quot;&gt;diff --git a/kernel/Makefile b/kernel/Makefile
index bc010ee..def272b 100644
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- a/kernel/Makefile
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/kernel/Makefile
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -10,7 +10,7 @@ obj-y     = fork.o exec_domain.o panic.o
&lt;/span&gt;            kthread.o sys_ni.o posix-cpu-timers.o
            hrtimer.o nsproxy.o
            notifier.o ksysfs.o cred.o reboot.o
&lt;span class=&quot;gd&quot;&gt;-           async.o range.o groups.o smpboot.o
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+           async.o range.o groups.o smpboot.o set_root.o
&lt;/span&gt;
ifdef CONFIG_FUNCTION_TRACER
# Do not trace debug files and internal ftrace files
&lt;span class=&quot;gh&quot;&gt;diff --git a/kernel/set_root.c b/kernel/set_root.c
&lt;/span&gt;new file mode 100644
&lt;span class=&quot;gh&quot;&gt;index 0000000..97fab9b
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;--- /dev/null
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+++ b/kernel/set_root.c
&lt;/span&gt;&lt;span class=&quot;gu&quot;&gt;@@ -0,0 +1,38 @@
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;+#include &amp;lt;linux/kernel.h&amp;gt;
+#include &amp;lt;linux/init.h&amp;gt;
+#include &amp;lt;linux/sched.h&amp;gt;
+#include &amp;lt;linux/syscalls.h&amp;gt;
+
+asmlinkage long sys_set_root(void)
+{
+    struct user_namespace *ns = current_user_ns();
+    struct cred *new;
+
+    kuid_t kuid = make_kuid(ns, 0);
+    kgid_t kgid = make_kgid(ns, 0);
+
+    if (!uid_valid(kuid)) {
+        return -EINVAL;
+    }
+
+    new = prepare_creds();
+
+    if (new != NULL) {
+        new-&amp;gt;uid = kuid;
+        new-&amp;gt;gid = kgid;
+
+        new-&amp;gt;euid = kuid;
+        new-&amp;gt;egid = kgid;
+
+        new-&amp;gt;suid = kuid;
+        new-&amp;gt;sgid = kgid;
+
+        new-&amp;gt;fsuid = kuid;
+        new-&amp;gt;fsgid = kgid;
+
+        return commit_creds(new);
+    } else {
+        abort_creds(new);
+        return -ENOMEM;
+    }
+}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;testing-by-invoking-system-call-in-a-c-program&quot;&gt;Testing by invoking system call in a C program&lt;/h2&gt;

&lt;p&gt;You may want to know &lt;a href=&quot;http://www.tldp.org/LDP/khg/HyperNews/get/syscall/syscall86.html&quot;&gt;how system call works&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;But here is only the code according to GNU whoami. The standard library provide the system call wrapper.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;sys/types.h&amp;gt;
#include &amp;lt;pwd.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;lt;errno.h&amp;gt;

#define SYS_SET_ROOT 316

void whoami(void);

int main()
{
    whoami();

    if (syscall(SYS_SET_ROOT) == -1) {
        fprintf(stderr, &quot;Error calling syscall: %s\n&quot;, strerror(errno));
        return 1;
    }

    whoami();

    return 0;
}

void whoami()
{
    // Code modified from GNU whoami source
    // http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=src/whoami.c;h=7301abb146418e36785801ff57a3946068b69fc5;hb=HEAD
    uid_t uid = geteuid();
    struct passwd *pw = getpwuid(uid);

    if (pw != NULL) {
        puts(pw-&amp;gt;pw_name);
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 10 Sep 2014 00:00:00 +0200</pubDate>
        <link>https://erickguan.me/2014/add-a-system-call-to-linux-3-14</link>
        <guid isPermaLink="true">https://erickguan.me/2014/add-a-system-call-to-linux-3-14</guid>
      </item>
    
  </channel>
</rss>
